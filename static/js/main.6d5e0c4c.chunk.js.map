{"version":3,"sources":["frag/Editor.js","frag/RSlider.js","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["codeStr","drawBuffer","canvas","buffer","ctx","getContext","h","height","w","width","console","log","clearRect","fillStyle","fillRect","beginPath","moveTo","Math","floor","lineTo","strokeStyle","lineWidth","stroke","i","length","v","hashCode","s","split","reduce","a","b","charCodeAt","EditorFrag","useState","astate","setAstate","code","setCode","name","min","max","step","value","params","setParams","canvasRef","useRef","useEffect","res","matchAll","usage","newParams","slice","changeParams","forEach","e","parseFloat","index","findIndex","push","sqrt","current","filter","e2","codeCompiled","useMemo","hash","map","join","paramsArgs","code2","f","eval","func","valid","error","compute","useCallback","audioCtx","gainNode","N","sampleRate","waveArray","Float32Array","pow","gain","setValueCurveAtTime","currentTime","myArrayBuffer","createBuffer","nowBuffering","getChannelData","channel","paramsVal","numberOfChannels","source","createBufferSource","createGain","connect","destination","start","old","window","AudioContext","webkitAudioContext","style","display","flexDirection","background","innerHeight","overflow","flex","margin","padding","onClick","fontSize","marginTop","flexWrap","p","onChange","arr","elem","find","maxWidth","onValueChange","c","highlight","languages","js","fontFamily","ref","innerWidth","polarToCartesian","centerX","centerY","radius","angle","x","cos","y","sin","describeArc","startAngle","endAngle","end","largeArcFlag","PI","WIDTH","SvgComponent","state","a2","arcpaths","cx","cy","viewBox","boxSizing","r","strokeWidth","fill","d","strokeLinecap","cursor","format","round","RSlider","maxTurn","mousemove","event","rectSize","getBoundingClientRect","center","relativeX","clientX","left","relativeY","clientY","top","angleBetweenTwoVectors","atan2","isNaN","newValue","clicked","setClicked","addEventListener","removeEventListener","position","onMouseDown","transform","fontWeight","color","App","className","Editor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d5e0c4c.chunk.js","sourcesContent":["import { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport React from \"react\";\nimport Editor from \"react-simple-code-editor\";\nimport { highlight, languages } from \"prismjs/components/prism-core\";\nimport \"prismjs/components/prism-clike\";\nimport \"prismjs/components/prism-javascript\";\nimport { createEvent } from \"@testing-library/dom\";\nimport RSlider from \"./RSlider\";\n\nconst codeStr = `//Globals are : sample (0,1,2..), rate (44100hz..), channel (0,1..)\n\n//use VOLUME   0.00 to 1.0  by 0.1;\n//use ATK      0.01 to 0.05 by 0.001;\n//use DESC     0.1  to 2.   by 0.01;\n//use FREQ     50   to 1800 by 10;\n//use HARMONIC 1.   to 7.   by 1.;\n//use INC      0.0  to 4.0  by 0.1;\n\n//Math Helper functions\nlet clamp = (x, a, b) => Math.max(a, Math.min(b,x))\nlet flatstep = (a,b,x) => clamp((x-a)/(b-a),0,1)\nlet ease = (t) => t<.5 ? 2*t*t : -1+(4-2*t)*t\nlet smoothstep = (a,b,x) => ease(flatstep(a,b,x))\nlet mix=(a,b,m) => a*(1.0-m)+b*m;\n//Sound Synthesis functions\nlet pure=(freq,t) => Math.sin(freq*t* 2* Math.PI)\nlet triangle=(freq,t) => Math.abs(((freq*t-0.25)%1.0)*2.0-1.0)*2.0-1.0\nlet square=(freq,t) => triangle(freq,t)>0.0 ? 1.0 : -1.0\nlet saw   =(freq,t) => (freq*t %1.0)*2. -1.\nlet atk=(d,t) => smoothstep(0,d,t)\nlet dec=(a,b,t) => Math.exp(-3*Math.max(0,t-a)/(b-a))\n\n//time in seconds\nlet t = sample / rate;\nlet s = 0.0;\n//0 is fundamental, others are harmonics\nfor(var i = 0; i<HARMONIC;i++){\n  let freq = FREQ * Math.pow(INC,i)\n  let shape = pure(freq,t)\n  let amplitude = Math.pow(0.5,i)\n  s+= amplitude*shape\n}\n//Envelope\nreturn s * atk(ATK,t) * dec(ATK,DESC,t)* VOLUME`;\n\n/**\n * @param {HTMLCanvasElement} canvas\n */\nfunction drawBuffer(canvas, buffer) {\n  let ctx = canvas.getContext(\"2d\");\n  let h = canvas.height;\n  let w = canvas.width;\n\n  ctx.width = w;\n  ctx.height = h;\n\n  console.log(w);\n\n  ctx.clearRect(0, 0, w, h);\n\n  ctx.fillStyle = \"#456\";\n  ctx.fillRect(0, 0, w, h);\n\n  ctx.beginPath();\n  ctx.moveTo(0, Math.floor(h / 2) + 0.5);\n  ctx.lineTo(w, Math.floor(h / 2) + 0.5);\n  ctx.strokeStyle = \"#999\";\n  ctx.lineWidth = \"1\";\n  ctx.stroke();\n\n  ctx.beginPath();\n  ctx.moveTo(0, h / 2);\n  for (var i = 0; i < buffer.length; i++) {\n    let v = -buffer[i];\n    ctx.lineTo((i / buffer.length) * w, (v * 0.5 + 0.5) * h);\n  }\n\n  ctx.strokeStyle = \"#000\";\n  ctx.lineWidth = \"1\";\n  ctx.stroke();\n}\n\nfunction hashCode(s) {\n  return s.split(\"\").reduce(function (a, b) {\n    a = (a << 5) - a + b.charCodeAt(0);\n    return a & a;\n  }, 0);\n}\n\nexport default function EditorFrag() {\n  const [astate, setAstate] = useState();\n\n  const [code, setCode] = useState(codeStr);\n\n  const [params, setParams] = useState([\n    {\n      name: \"P_0\",\n      min: 0,\n      max: 1,\n      step: 0.01,\n      value: 0.5,\n    },\n  ]);\n\n  const canvasRef = useRef();\n\n  useEffect(() => {\n    let res = [\n      ...code.matchAll(\n        \"//use ([a-zA-Z0-9_]+) +([0-9.]+) +to +([0-9.]+) +by +([0-9.]*)+ *; *\\n\"\n      ),\n    ];\n\n    let usage = {};\n\n    let newParams = params.slice();\n    let changeParams = false;\n    params.forEach((e) => {\n      usage[e.name] = 0;\n    });\n\n    for (var i = 0; i < res?.length || 0; i++) {\n      let name = res[i][1];\n      let min = 0;\n      let max = 1;\n      let step = 0.01;\n\n      min = parseFloat(res[i][2]);\n      max = parseFloat(res[i][3]);\n      step = parseFloat(res[i][4]);\n\n      let index = params.findIndex((e) => e.name === name);\n      if (index === -1) {\n        changeParams = true;\n        newParams.push({\n          name,\n          min,\n          max,\n          step,\n          value: min > 0 ? Math.sqrt(max * min) : max / 2,\n        });\n      } else {\n        let current = params[index];\n        if (\n          current.min !== min ||\n          current.max !== max ||\n          current.step !== step\n        ) {\n          changeParams = true;\n          current.min = min;\n          current.max = max;\n          current.step = step;\n          current.value = min > 0 ? Math.sqrt(max * min) : max / 2;\n        }\n      }\n\n      usage[name] = (usage[name] || 0) + 1;\n    }\n\n    params.forEach((e) => {\n      if (usage[e.name] === 0) {\n        changeParams = true;\n        newParams = newParams.filter((e2) => e2.name !== e.name);\n      }\n    });\n\n    if (changeParams === true) setParams(newParams);\n  }, [code, params]);\n\n  const codeCompiled = useMemo(() => {\n    let hash = hashCode(code + params.map((e) => e.value + \"\").join(\";\"));\n    try {\n      let paramsArgs = params.map((e) => e.name + \",\").join(\"\");\n      let code2 =\n        \"((sample, rate,channel, {\" +\n        paramsArgs.slice(0, -1) +\n        \"}) => {\" +\n        code +\n        \"})\";\n\n      let f = eval(code2);\n      let a = f(10, 44100, 1, {});\n      return { func: f, valid: true, hash };\n    } catch (e) {\n      console.error(\"CANT USE CODE \", e);\n      return { func: () => 0.0, valid: false, hash };\n    }\n  }, [code, params]);\n\n  let compute = useCallback(() => {\n    if (astate && astate.audioCtx && codeCompiled.valid === true) {\n      if (astate.gainNode) {\n        // astate.source.stop();\n        let duration = 0.05;\n        let N = (astate.audioCtx.sampleRate * duration) / 10.0;\n        var waveArray = new Float32Array(N);\n        for (var i = 0; i < N; i++) {\n          waveArray[i] = Math.pow(1.0 - i / (N - 1), 2);\n        }\n        astate.gainNode.gain.setValueCurveAtTime(\n          waveArray,\n          astate.audioCtx.currentTime,\n          0.05\n        );\n      }\n      var myArrayBuffer = astate.audioCtx.createBuffer(\n        2,\n        astate.audioCtx.sampleRate * 1,\n        astate.audioCtx.sampleRate\n      );\n      for (\n        var channel = 0;\n        channel < myArrayBuffer.numberOfChannels;\n        channel++\n      ) {\n        var nowBuffering = myArrayBuffer.getChannelData(channel);\n\n        let paramsVal = {};\n        params.forEach((e) => (paramsVal[e.name] = e.value));\n        for (var i = 0; i < myArrayBuffer.length; i++) {\n          try {\n            nowBuffering[i] = codeCompiled.func(\n              i,\n              astate.audioCtx.sampleRate,\n              channel,\n              paramsVal\n            );\n          } catch {\n            return;\n          }\n        }\n      }\n\n      let source = astate.audioCtx.createBufferSource();\n      source.buffer = myArrayBuffer;\n\n      var gainNode = astate.audioCtx.createGain();\n      gainNode.gain.value = 1.0;\n      source.connect(gainNode);\n      gainNode.connect(astate.audioCtx.destination);\n\n      //   source.connect(astate.audioCtx.destination);\n      source.start();\n\n      drawBuffer(canvasRef.current, myArrayBuffer.getChannelData(0));\n\n      setAstate((old) => {\n        return { ...old, source, gainNode, hash: codeCompiled?.hash };\n      });\n    }\n  }, [astate, codeCompiled]);\n\n  useEffect(() => {\n    if (codeCompiled.valid === true && astate?.hash !== codeCompiled?.hash) {\n      compute();\n    }\n  }, [codeCompiled, compute, astate, params]);\n\n  useEffect(() => {\n    var audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n    setAstate({ audioCtx });\n  }, []);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        background: \"#789\",\n        height: window.innerHeight,\n        overflow: \"hidden\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          background: \"#789\",\n          flex: \"1 1 auto\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            flex: \"1 60 auto\",\n            margin: \"20px\",\n            padding: \"20px\",\n            background: \"#EFF\",\n          }}\n        >\n          <button\n            onClick={() => {\n              compute();\n            }}\n          >\n            Start\n          </button>\n          <div style={{ fontSize: \"0.8em\", marginTop: \"10px\" }}>\n            <div> Write your sound function on the right !</div>\n            <div>\n              The function will be evaluated for every sample (usually 44100 per\n              second of playback) and played.\n            </div>\n            <div>\n              Sliders are auto-generated by comments starting with //use.\n            </div>\n          </div>\n\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              flex: \"1 1 auto\",\n              marginTop: \"20px\",\n              flexWrap: \"wrap\",\n            }}\n          >\n            {params.map((p) => (\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                }}\n              >\n                <RSlider\n                  name={p.name}\n                  min={p.min}\n                  max={p.max}\n                  step={p.step}\n                  value={p.value}\n                  onChange={(v) =>\n                    setParams((old) => {\n                      let arr = old.slice();\n                      let elem = arr.find((e) => e.name === p.name);\n                      if (elem) elem.value = v;\n                      return arr;\n                    })\n                  }\n                ></RSlider>\n              </div>\n            ))}\n          </div>\n\n          <div style={{ flex: \"5 1 auto\" }}></div>\n        </div>\n        <div\n          style={{\n            flex: \"1 1 auto\",\n            margin: \"20px\",\n            padding: \"20px\",\n            background: \"#EFF\",\n            maxWidth: \"890px\",\n          }}\n        >\n          <Editor\n            value={code}\n            onValueChange={(c) => setCode(c)}\n            highlight={(c) => highlight(c, languages.js)}\n            padding={10}\n            style={{\n              fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n              fontSize: 12,\n            }}\n          />\n        </div>\n      </div>\n\n      <div style={{ padding: \"20px\", flex: \"none\" }}>\n        <canvas\n          ref={canvasRef}\n          width={window.innerWidth - 40 + \"\"}\n          height=\"300\"\n          style={{ width: window.innerWidth - 40 + \"px\", height: \"300px\" }}\n        ></canvas>\n      </div>\n    </div>\n  );\n}\n","import { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport React from \"react\";\n\nfunction polarToCartesian(centerX, centerY, radius, angle) {\n  return {\n    x: centerX + radius * Math.cos(angle),\n    y: centerY + radius * Math.sin(angle),\n  };\n}\n\nfunction describeArc(x, y, radius, startAngle, endAngle) {\n  var start = polarToCartesian(x, y, radius, endAngle);\n  var end = polarToCartesian(x, y, radius, startAngle);\n\n  var largeArcFlag = endAngle - startAngle <= Math.PI ? \"0\" : \"1\";\n\n  var d = [\n    \"M\",\n    start.x,\n    start.y,\n    \"A\",\n    radius,\n    radius,\n    0,\n    largeArcFlag,\n    0,\n    end.x,\n    end.y,\n  ].join(\" \");\n\n  return d;\n}\n\nconst WIDTH = 120;\nconst WIDTH_HALF = WIDTH / 2.0;\n\nfunction SvgComponent({ angle }) {\n  let state = useMemo(() => {\n    let a2 = angle + Math.PI / 2.0;\n    let arcpaths = [describeArc(90, 90, 70, Math.PI / 2.0, a2)];\n    if (a2 >= Math.PI * 2.5) {\n      arcpaths = [\n        describeArc(90, 90, 70, Math.PI / 2.0, Math.PI * 1.99 + Math.PI / 2.0),\n        describeArc(90, 90, 70, Math.PI / 2.0, a2 % (Math.PI * 2)),\n      ];\n    }\n\n    let cx = 90 + 70 * Math.cos(a2);\n    let cy = 90 + 70 * Math.sin(a2);\n\n    return {\n      arcpaths,\n      cx,\n      cy,\n    };\n  }, [angle]);\n\n  return (\n    <svg\n      width={WIDTH}\n      height={WIDTH}\n      viewBox=\"0 0 180 180\"\n      style={{\n        padding: 5,\n        boxSizing: \"border-box\",\n      }}\n    >\n      <circle\n        r={70}\n        cx={90}\n        cy={90}\n        strokeWidth={5}\n        stroke=\"#e9eaee\"\n        fill=\"none\"\n      />\n\n      {state.arcpaths.map((d, index) => (\n        <path\n          d={d}\n          strokeLinecap=\"round\"\n          strokeWidth={20}\n          stroke={index === 0 ? \"#007aff\" : \"#000000\"}\n          fill=\"none\"\n        />\n      ))}\n\n      <circle r={20} cx={state.cx} cy={state.cy} fill=\"#fff\" cursor=\"pointer\" />\n    </svg>\n  );\n}\n\nfunction format(step, value) {\n  if (Math.round(step) !== step) {\n    return Math.round(value * (1.0 / step)) / (1.0 / step) + \"\";\n  } else {\n    return Math.round(value) + \"\";\n  }\n}\n\nexport default function RSlider({\n  min,\n  max,\n  step,\n  value,\n  onChange,\n  maxTurn,\n  name,\n}) {\n  let angle = useMemo(() => (Math.PI * 2 * (value - min)) / (max - min));\n\n  let ref = useRef();\n\n  let mousemove = useCallback(\n    (event) => {\n      const rectSize = ref.current.getBoundingClientRect();\n      const width = rectSize.width;\n      let center = width / 2;\n      let relativeX = event.clientX - rectSize.left;\n      let relativeY = event.clientY - rectSize.top;\n      let angleBetweenTwoVectors = Math.atan2(\n        relativeY - center,\n        relativeX - center\n      );\n\n      angleBetweenTwoVectors =\n        (angleBetweenTwoVectors + Math.PI * 2 - Math.PI / 2) % (Math.PI * 2);\n      angleBetweenTwoVectors /= Math.PI * 2;\n\n      if (!isNaN(angleBetweenTwoVectors)) {\n        let newValue = min + (max - min) * angleBetweenTwoVectors;\n        newValue = Math.max(\n          min,\n          Math.min(max, Math.round(newValue / step) * step)\n        );\n        onChange(newValue);\n      }\n    },\n    [onChange, min, max, step]\n  );\n\n  let [clicked, setClicked] = useState(false);\n\n  useEffect(() => {\n    window.addEventListener(\"mouseup\", () => setClicked(false));\n  }, []);\n\n  useEffect(() => {\n    if (clicked) {\n      window.addEventListener(\"mousemove\", mousemove);\n      return () => window.removeEventListener(\"mousemove\", mousemove);\n    }\n  }, [clicked, mousemove]);\n\n  return (\n    <div>\n      <div\n        ref={ref}\n        style={{\n          width: WIDTH + \"px\",\n          height: WIDTH + \"px\",\n          position: \"relative\",\n        }}\n        onMouseDown={(e) => {\n          setClicked(true);\n          mousemove(e);\n        }}\n      >\n        <SvgComponent angle={angle}></SvgComponent>\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%,-50%)\",\n          }}\n        >\n          <div style={{ fontSize: \"0.8em\", fontWeight: \"bold\", color: \"grey\" }}>\n            {name}\n          </div>\n          <div style={{ color: \"#007aff\" }}>{format(step, value)}</div>\n        </div>\n      </div>\n\n      {/* <input\n        type=\"range\"\n        min={min + \"\"}\n        max={max + \"\"}\n        step={step + \"\"}\n        value={value + \"\"}\n        // onChange={(e) => onChange(e.target.value)}\n      ></input> */}\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport EditorFrag from \"./frag/Editor\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <EditorFrag></EditorFrag>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}